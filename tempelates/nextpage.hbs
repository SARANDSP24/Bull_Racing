<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sorted Cow Data</title>
    <style>
        /* Reset */
        body, h1, h2, p, ul, ol, li, form, input, button, table, th, td {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        /* Body */
        body {
            font-family: Arial, sans-serif;
            background-color: #f9f9f9;
            color: #333;
            line-height: 1.6;
            padding: 20px;
        }

        /* Table */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: center;
        }

        th {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>

<table>
    <thead>
        <tr>
            <th>Cow Name</th>
            <th>Registration Number</th>
            <th>Average Running Time (seconds)</th>
            <th>Rank</th>
        </tr>
    </thead>
    <tbody id="sortedData">
        <!-- Sorted data will be displayed here -->
    </tbody>
</table>

<script>
    // JavaScript to parse query parameters and populate the table with sorted data
    window.onload = function() {
        const queryString = window.location.search;
        const urlParams = new URLSearchParams(queryString);

        const sortedData = [];
        let index = 0;

        // Loop through query parameters and extract cow data
        while (urlParams.has(`name${index}`) && urlParams.has(`registration${index}`) && urlParams.has(`average${index}`)) {
            const name = urlParams.get(`name${index}`);
            const registration = urlParams.get(`registration${index}`);
            const average = urlParams.get(`average${index}`);

            sortedData.push({ name, registration, average });
            index++;
        }

        // Sort the data based on average time
        sortedData.sort((a, b) => parseFloat(a.average) - parseFloat(b.average));

        // Populate the table with sorted data
        const tableBody = document.getElementById("sortedData");

        sortedData.forEach((cow, rank) => {
            const row = document.createElement("tr");
            row.innerHTML = `
                <td>${cow.name}</td>
                <td>${cow.registration}</td>
                <td>${cow.average}</td>
                <td>${rank + 1}</td>
            `;
            tableBody.appendChild(row);
        });
    };
</script>

</body>
</html>
